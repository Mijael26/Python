## Generamos un df de distintos agentes 
## Para predecir las transancciones del mes 7
## Tomando como criterio solo los ultimos 6 meses
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression

# Crear un DataFrame con tus datos
data = {'AGENTE': ['AGENTE_1', 'AGENTE_2', 'AGENTE_3', 'AGENTE_4', 'AGENTE_5'],
        '1': [150, 7000, 2500, 150, 1007],
        '2': [100, 8000, 811, 300, 1504],
        '3': [175, 7234, 1888, 560, 1305],
        '4': [125, 7667, 1700, 750, 1254],
        '5': [112, 8166, 1479, 560, 154],
        '6': [114, 7139, 1880, 800, 1565]}

df = pd.DataFrame(data)

# Crear una lista de diccionarios para almacenar las predicciones
resultados_prediccion_list = []

# Crear un gráfico con subgráficos para cada agente
fig, axs = plt.subplots(len(df), figsize=(8, 6 * len(df)))

# Iterar sobre cada agente
for i, (index, row) in enumerate(df.iterrows()):
    agente = row['AGENTE']
    
    # Obtener las transacciones históricas
    transacciones_historicas = row[['1', '2', '3', '4', '5', '6']].values.reshape(-1, 1)
    
    # Crear un modelo de regresión lineal
    modelo = LinearRegression()
    
    # Entrenar el modelo
    modelo.fit([[1], [2], [3], [4], [5], [6]], transacciones_historicas)
    
    # Realizar la predicción para el próximo mes (mes 7)
    transacciones_prediccion = modelo.predict([[7]])
    
    # Almacenar resultados en la lista de predicciones
    resultados_prediccion_list.append({
        'AGENTE': agente,
        'Transacciones_Prediccion': transacciones_prediccion[0][0]
    })
    
    # Graficar los puntos de datos y la regresión lineal
    axs[i].scatter(range(1, 7), transacciones_historicas.flatten(), label='Datos Históricos')
    axs[i].plot([7], transacciones_prediccion.flatten(), marker='o', color='red', label='Predicción Mes 7')
    axs[i].set_title(f'Regresión Lineal para {agente}')
    axs[i].set_xlabel('Mes')
    axs[i].set_ylabel('Transacciones')
    axs[i].legend()

# Ajustar la disposición de los subgráficos
plt.tight_layout()
plt.show()

# Convertir la lista de predicciones en un DataFrame
resultados_prediccion = pd.DataFrame(resultados_prediccion_list)

# Imprimir los resultados
print(resultados_prediccion)

resultados_prediccion.to_excel('resultados_prediccion_TRX.xlsx', index=False)
